1. Onderdelen van een if/else statement
   Een if statement maakt gebruik van de volgende elementen:
       keywords : if en else
       conditie(s): Een expressie die herleidbaar is naar een boolean.
       if code blok: Code die moet uitgevoerd worden als de if conditie gelijk is aan True.
       else code blok: Code die moet worden uitgevoerd wanneer de conditie gelijk is aan False.

       Voorbeeld:
           if/else abstract.
               ```
                   if(<Conditie>):
                       <If code blok>
                   else:
                       <Else code blok>
               ```

   Let op: Alleen de if of else code wordt uitgevoerd!


2. Waarom een if/else statement?
   Tijdens het schrijven van code (instructies) is het vaak zo dat we aan de hand van bepaalde "omstandigheden"
   (conditie(s)) code wel of niet willen uitvoeren. Door een if/else statement te gebruiken zijn we instaat om
   instructies te schrijven waarbij de computer tijdens het uitvoeren van het programma "zelf" keuzes maakt. Zoals in
   het voorbeeld is te zien kunnen we bijvoorbeeld de prijs van een object laten bepalen door, eerder gegeven, input.

   Voorbeeld:
       If statements waarbij een prijs wordt bepaald op basis van een variabele genaamd "leeftijd".
           ```
               if(leeftijd < 65):
                   prijs = 15
               else:
                   prijs = 12
           ```

3. Het gebruik van een enkel if statement
   Soms is het niet nodig om een volledige if/else structuur te gebruiken, maar volstaat het om alleen een enkele if te
   gebruiken. Dit is het geval wanneer we enkel een actie willen uitvoeren als aan een bepaalde conditie wordt voldaan.
   Een enkel if statement is een optionele stap die uitgevoerd kan worden wanneer de conditie waar is.

   Voorbeeld:
       Enkel if abstract.
           ```
               if(<Conditie>):
                   <Code die wordt uitgevoerd wanneer conditie gelijk is aan True>
           ```

       Enkel if concreet.
           ```
               if(leeftijd < 18):
                   print("Je bent minderjarig.")
           ```

4. Het "nesten" van if/else statements
   Voor veel programma's is het nodig om 'complexe' keuzes te maken, dit kunnen we bereiken door gebruik te maken van
   nested if/else statements. Omdat we in het if of else code blok ook gebruik kunnen maken van een if/else statements
   is het mogelijk om code uit te voeren aan de hand van verschillende condities.

   Voorbeeld:
        Nested if/else abstract.
            ```
               if(<Conditie1>):
                   <Code die wordt uitgevoerd wanneer conditie1 gelijk is aan True en voordat onderstaande if/else wordt uitgevoerd.>
                   if(<conditie2>):
                       <Code die wordt uitgevoerd wanneer conditie1 gelijk is aan True en conditie2 gelijk is aan True.>
                   else:
                       <Code die wordt uitgevoerd wanneer conditie1 gelijk is aan True en conditie2 gelijk is aan False.>
                   <Code die wordt uitgevoerd wanneer conditie1 gelijk is aan True en de bovenstaande if/else is uitgevoerd.>
               else:
                   <Code die wordt uitgevoerd wanneer conditie1 gelijk is aan False en voordat onderstaande if/else wordt uitgevoerd.>
                   if(<conditie3>):
                       <Code die wordt uitgevoerd wanneer conditie1 gelijk is aan False en conditie3 gelijk is aan True.>
                   else:
                       <Code die wordt uitgevoerd wanneer conditie1 gelijk is aan False en conditie3 gelijk is aan False.>
                   <Code die wordt uitgevoerd wanneer conditie1 gelijk is aan False en voordat onderstaande if/else wordt uitgevoerd.>
            ```

        Nested if/else concreet.
            ```
               if(leeftijd<65):
                   if(kortingsKaart):
                      prijs = 10
                   else:
                       prijs = 15
               else:
                   if(kortingsKaart):
                       prijs = 7
                   else:
                       prijs = 12
               print(prijs)
            ```
